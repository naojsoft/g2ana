#!/usr/bin/env python

import sys
from optparse import OptionParser

from g2base import ssdlog
from g2ana.cleanup_fits import main


if __name__ == '__main__':

    # Parse command line options
    usage = "usage: %prog [options] [file] ..."
    optprs = OptionParser(usage=usage, version=('%prog'))

    optprs.add_option("--debug", dest="debug", default=False,
                      action="store_true",
                      help="Enter the pdb debugger on main()")
    optprs.add_option('-d', "--fitsdir", dest="fitsdir", metavar="DIR",
                      default=None,
                      help="Use DIR for storing instrument FITS files")
    optprs.add_option("--daemon", dest="daemon",  action="store_true",
                      default=False,
                      help="Run as a daemon.")
    optprs.add_option("--dry-run", dest="dry_run", default=False,
                      action="store_true",
                      help="Don't really delete files, just show what we would do")
    optprs.add_option("--hi", dest="hiwater", metavar="PCT",
                      type="int", default=80,
                      help="Set high water disk usage to PCT")
    optprs.add_option("--interval", dest="interval", metavar="SECS",
                      type="float", default=60.0,
                      help="Set interval for waiting between disk checks")
    optprs.add_option("--lo", dest="lowater", metavar="PCT",
                      type="int", default=40,
                      help="Set low water disk usage to PCT")
    optprs.add_option("--profile", dest="profile", action="store_true",
                      default=False,
                      help="Run the profiler on main()")
    ssdlog.addlogopts(optprs)

    (options, args) = optprs.parse_args(sys.argv[1:])

    if len(args) > 0:
       optprs.error("incorrect number of arguments")

    # Are we debugging this?
    if options.debug:
        import pdb

        pdb.run('main(options, args)')

    # Are we profiling this?
    elif options.profile:
        import profile

        print("%s profile:" % sys.argv[0])
        profile.run('main(options, args)')

    else:
        main(options, args)

